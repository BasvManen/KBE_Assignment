from spoiler_files import Spoiler
from parapy.core import *
from parapy.geom import *
from parapy.lib.xfoil import *

from kbeutils.geom.curve import airfoil_points_in_xy_plane
import matplotlib.pyplot as plt


class XFoilAnalysis(GeomBase):

    spoiler = Input(in_tree=True)
    fraction = Input(0)
    velocity = Input(25)

    @Part
    def cutting_plane(self):
        return Plane(Point(0, self.fraction*spoiler.spoiler_span/2, 0), normal=VY)

    @Part
    def analysis_section(self):
        return IntersectedShapes(shape_in=self.spoiler.main_plate.surface,
                                 tool=self.cutting_plane)

    @Attribute
    def reynolds_number(self):
        return (1.225*self.velocity*self.spoiler.spoiler_chord/1000) / 1.47e-5

    @Attribute
    def analysis_points(self):
        return airfoil_points_in_xy_plane(curve_in=self.analysis_section.edges[0], n_points=200)

    @Attribute
    def xfoil_analysis(self):
        return run_xfoil(self.analysis_points,
                         self.reynolds_number,  # this should depend on chord length
                         (self.spoiler.spoiler_angle, self.spoiler.spoiler_angle, 0),  # start AoA, end AoA, step
                         norm=True,  # normalize airfoil if necessary
                         pane=True,  # smooth out the airfoil
                         cleanup=True)  # remove files generated by xfoil

    @Attribute
    def downforce_coefficient(self):
        data = self.xfoil_analysis
        return -data[0][1]


if __name__ == '__main__':
    from parapy.gui import display
    spoiler = Spoiler(label="Spoiler",
                      mid_airfoil='0012',
                      tip_airfoil='0008',
                      spoiler_span=2.5,
                      spoiler_chord=0.8,
                      spoiler_angle=8.0,
                      strut_airfoil_shape=True,
                      strut_lat_location=0.8,
                      strut_height=0.25,
                      strut_chord=0.4,
                      strut_thickness=0.04,
                      strut_sweep=15.,
                      strut_cant=0.,
                      endplate_present=False,
                      endplate_thickness=0.01,
                      endplate_sweep=15.,
                      endplate_cant=0.)

    analysis = XFoilAnalysis(spoiler=spoiler)
    print("local lift coefficient:", analysis.downforce_coefficient)
    display(analysis)
